package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class license_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final JspFactory _jspxFactory = JspFactory.getDefaultFactory();

  private static java.util.List<String> _jspx_dependants;

  private org.glassfish.jsp.api.ResourceInjector _jspx_resourceInjector;

  public java.util.List<String> getDependants() {
    return _jspx_dependants;
  }

  public void _jspService(HttpServletRequest request, HttpServletResponse response)
        throws java.io.IOException, ServletException {

    PageContext pageContext = null;
    HttpSession session = null;
    ServletContext application = null;
    ServletConfig config = null;
    JspWriter out = null;
    Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;

    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;
      _jspx_resourceInjector = (org.glassfish.jsp.api.ResourceInjector) application.getAttribute("com.sun.appserv.jsp.resource.injector");

      out.write("\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>JSP Page</title>\n");
      out.write("        <style>\n");
      out.write("              body{\n");
      out.write("                    background-image: url(\"vm1.jpg\");\n");
      out.write("                    background-repeat: no-repeat;\n");
      out.write("                    background-size: 100%;\n");
      out.write("/*                    font-size:300%;*/\n");
      out.write("                    color: /*#525252;*/white;\n");
      out.write("                   }\n");
      out.write("                   h1{\n");
      out.write("                       color:orangered;\n");
      out.write("                       font-size: 70px;\n");
      out.write("                   }\n");
      out.write("        </style>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <h1 align=\"center\">LICENSE</h1>\n");
      out.write("        <text>\n");
      out.write("            \n");
      out.write("        TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION<br>\n");
      out.write("\n");
      out.write("   1. Definitions.<br>\n");
      out.write("\n");
      out.write("   \"License\" shall mean the terms and conditions for use, reproduction,<br>\n");
      out.write("      and distribution as defined by Sections 1 through 9 of this document.<br>\n");
      out.write("\n");
      out.write("      \"Licensor\" shall mean the copyright owner or entity authorized by<br>\n");
      out.write("      the copyright owner that is granting the License.<br>\n");
      out.write("\n");
      out.write("      \"Legal Entity\" shall mean the union of the acting entity and all<br>\n");
      out.write("      other entities that control, are controlled by, or are under common<br>\n");
      out.write("      control with that entity. For the purposes of this definition,<br>\n");
      out.write("      \"control\" means (i) the power, direct or indirect, to cause the<br>\n");
      out.write("      direction or management of such entity, whether by contract or<br>\n");
      out.write("      otherwise, or (ii) ownership of fifty percent (50%) or more of the<br>\n");
      out.write("      outstanding shares, or (iii) beneficial ownership of such entity.<br>\n");
      out.write("\n");
      out.write("      \"You\" (or \"Your\") shall mean an individual or Legal Entity<br>\n");
      out.write("      exercising permissions granted by this License.<br>\n");
      out.write("\n");
      out.write("      \"Source\" form shall mean the preferred form for making modifications,<br>\n");
      out.write("      including but not limited to software source code, documentation<br>\n");
      out.write("      source, and configuration files.<br>\n");
      out.write("\n");
      out.write("      \"Object\" form shall mean any form resulting from mechanical<br>\n");
      out.write("      transformation or translation of a Source form, including but<br>\n");
      out.write("      not limited to compiled object code, generated documentation,<br>\n");
      out.write("      and conversions to other media types.<br>\n");
      out.write("\n");
      out.write("      \"Work\" shall mean the work of authorship, whether in Source or<br>\n");
      out.write("      Object form, made available under the License, as indicated by a<br>\n");
      out.write("      copyright notice that is included in or attached to the work<br>\n");
      out.write("      (an example is provided in the Appendix below).<br>\n");
      out.write("\n");
      out.write("      \"Derivative Works\" shall mean any work, whether in Source or Object<br>\n");
      out.write("      form, that is based on (or derived from) the Work and for which the<br>\n");
      out.write("      editorial revisions, annotations, elaborations, or other modifications<br>\n");
      out.write("      represent, as a whole, an original work of authorship. For the purposes<br>\n");
      out.write("      of this License, Derivative Works shall not include works that remain<br>\n");
      out.write("      separable from, or merely link (or bind by name) to the interfaces of,<br>\n");
      out.write("      the Work and Derivative Works thereof.<br>\n");
      out.write("\n");
      out.write("      \"Contribution\" shall mean any work of authorship, including<br>\n");
      out.write("      the original version of the Work and any modifications or additions<br>\n");
      out.write("      to that Work or Derivative Works thereof, that is intentionally<br>\n");
      out.write("      submitted to Licensor for inclusion in the Work by the copyright owner<br>\n");
      out.write("      or by an individual or Legal Entity authorized to submit on behalf of<br>\n");
      out.write("      the copyright owner. For the purposes of this definition, \"submitted\"<br>\n");
      out.write("      means any form of electronic, verbal, or written communication sent<br>\n");
      out.write("      to the Licensor or its representatives, including but not limited to<br>\n");
      out.write("      communication on electronic mailing lists, source code control systems,<br>\n");
      out.write("      and issue tracking systems that are managed by, or on behalf of, the<br>\n");
      out.write("      Licensor for the purpose of discussing and improving the Work, but<br>\n");
      out.write("      excluding communication that is conspicuously marked or otherwise<br>\n");
      out.write("      designated in writing by the copyright owner as \"Not a Contribution.\"<br>\n");
      out.write("<br>\n");
      out.write("      \"Contributor\" shall mean Licensor and any individual or Legal Entity<br>\n");
      out.write("      on behalf of whom a Contribution has been received by Licensor and<br>\n");
      out.write("      subsequently incorporated within the Work.<br>\n");
      out.write("<br>\n");
      out.write("   2. Grant of Copyright License. Subject to the terms and conditions of<br>\n");
      out.write("      this License, each Contributor hereby grants to You a perpetual,<br>\n");
      out.write("      worldwide, non-exclusive, no-charge, royalty-free, irrevocable<br>\n");
      out.write("      copyright license to reproduce, prepare Derivative Works of,<br>\n");
      out.write("      publicly display, publicly perform, sublicense, and distribute the<br>\n");
      out.write("      Work and such Derivative Works in Source or Object form.<br>\n");
      out.write("<br>\n");
      out.write("   3. Grant of Patent License. Subject to the terms and conditions of<br>\n");
      out.write("      this License, each Contributor hereby grants to You a perpetual,<br>\n");
      out.write("      worldwide, non-exclusive, no-charge, royalty-free, irrevocable<br>\n");
      out.write("      (except as stated in this section) patent license to make, have made<br>,\n");
      out.write("      use, offer to sell, sell, import, and otherwise transfer the Work,<br>\n");
      out.write("      where such license applies only to those patent claims licensable<br>\n");
      out.write("      by such Contributor that are necessarily infringed by their<br>\n");
      out.write("      Contribution(s) alone or by combination of their Contribution(s)<br>\n");
      out.write("      with the Work to which such Contribution(s) was submitted. If You<br>\n");
      out.write("      institute patent litigation against any entity (including a<br>\n");
      out.write("      cross-claim or counterclaim in a lawsuit) alleging that the Work<br>\n");
      out.write("      or a Contribution incorporated within the Work constitutes direct<br>\n");
      out.write("      or contributory patent infringement, then any patent licenses<br>\n");
      out.write("      granted to You under this License for that Work shall terminate<br>\n");
      out.write("      as of the date such litigation is filed.<br>\n");
      out.write("<br>\n");
      out.write("   4. Redistribution. You may reproduce and distribute copies of the<br>\n");
      out.write("      Work or Derivative Works thereof in any medium, with or without<br>\n");
      out.write("      modifications, and in Source or Object form, provided that You<br>\n");
      out.write("      meet the following conditions:<br>\n");
      out.write("<br>\n");
      out.write("      (a) You must give any other recipients of the Work or<br>\n");
      out.write("          Derivative Works a copy of this License; and<br>\n");
      out.write("<br>\n");
      out.write("      (b) You must cause any modified files to carry prominent notices<br>\n");
      out.write("          stating that You changed the files; and<br>\n");
      out.write("<br>\n");
      out.write("      (c) You must retain, in the Source form of any Derivative Works<br>\n");
      out.write("          that You distribute, all copyright, patent, trademark, and<br>\n");
      out.write("          attribution notices from the Source form of the Work,<br>\n");
      out.write("          excluding those notices that do not pertain to any part of<br>\n");
      out.write("          the Derivative Works; and<br>\n");
      out.write("<br>\n");
      out.write("      (d) If the Work includes a \"NOTICE\" text file as part of its<br>\n");
      out.write("          distribution, then any Derivative Works that You distribute mu<br>st\n");
      out.write("          include a readable copy of the attribution notices contained<br>\n");
      out.write("          within such NOTICE file, excluding those notices that do not<br>\n");
      out.write("          pertain to any part of the Derivative Works, in at least one<br>\n");
      out.write("          of the following places: within a NOTICE text file distributed<br>\n");
      out.write("          as part of the Derivative Works; within the Source form or<br>\n");
      out.write("          documentation, if provided along with the Derivative Works; or,<br>\n");
      out.write("          within a display generated by the Derivative Works, if and<br>\n");
      out.write("          wherever such third-party notices normally appear. The contents<br>\n");
      out.write("          of the NOTICE file are for informational purposes only and<br>\n");
      out.write("          do not modify the License. You may add Your own attribution<br>\n");
      out.write("          notices within Derivative Works that You distribute, alongside<br>\n");
      out.write("          or as an addendum to the NOTICE text from the Work, provided<br>\n");
      out.write("          that such additional attribution notices cannot be construed<br>\n");
      out.write("          as modifying the License.<br>\n");
      out.write("<br>\n");
      out.write("      You may add Your own copyright statement to Your modifications and<br>\n");
      out.write("      may provide additional or different license terms and conditions<br>\n");
      out.write("      for use, reproduction, or distribution of Your modifications, or<br>\n");
      out.write("      for any such Derivative Works as a whole, provided Your use,<br>\n");
      out.write("      reproduction, and distribution of the Work otherwise complies with<br>\n");
      out.write("      the conditions stated in this License.<br>\n");
      out.write("<br>\n");
      out.write("   5. Submission of Contributions. Unless You explicitly state otherwise,<br>\n");
      out.write("      any Contribution intentionally submitted for inclusion in the Work<br>\n");
      out.write("      by You to the Licensor shall be under the terms and conditions of<br>\n");
      out.write("      this License, without any additional terms or conditions.<br>\n");
      out.write("      Notwithstanding the above, nothing herein shall supersede or modify<br>\n");
      out.write("      the terms of any separate license agreement you may have executed<br>\n");
      out.write("      with Licensor regarding such Contributions.<br>\n");
      out.write("<br>\n");
      out.write("   6. Trademarks. This License does not grant permission to use the trade<br>\n");
      out.write("      names, trademarks, service marks, or product names of the Licensor,<br>\n");
      out.write("      except as required for reasonable and customary use in describing the<br>\n");
      out.write("      origin of the Work and reproducing the content of the NOTICE file.<br>\n");
      out.write("<br>\n");
      out.write("   7. Disclaimer of Warranty. Unless required by applicable law or<br>\n");
      out.write("      agreed to in writing, Licensor provides the Work (and each<br>\n");
      out.write("      Contributor provides its Contributions) on an \"AS IS\" BASIS,<br>\n");
      out.write("      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or<br>\n");
      out.write("      implied, including, without limitation, any warranties or conditions<br>\n");
      out.write("      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A<br>\n");
      out.write("      PARTICULAR PURPOSE. You are solely responsible for determining the<br>\n");
      out.write("      appropriateness of using or redistributing the Work and assume any<br>\n");
      out.write("      risks associated with Your exercise of permissions under this License.<br>\n");
      out.write("<br>\n");
      out.write("   8. Limitation of Liability. In no event and under no legal theory,<br>\n");
      out.write("      whether in tort (including negligence), contract, or otherwise,<br>\n");
      out.write("      unless required by applicable law (such as deliberate and grossly<br>\n");
      out.write("      negligent acts) or agreed to in writing, shall any Contributor be<br>\n");
      out.write("      liable to You for damages, including any direct, indirect, special,<br>\n");
      out.write("      incidental, or consequential damages of any character arising as a<br>\n");
      out.write("      result of this License or out of the use or inability to use the<br>\n");
      out.write("      Work (including but not limited to damages for loss of goodwill,<br>\n");
      out.write("      work stoppage, computer failure or malfunction, or any and all<br>\n");
      out.write("      other commercial damages or losses), even if such Contributor<br>\n");
      out.write("      has been advised of the possibility of such damages.<br>\n");
      out.write("<br>\n");
      out.write("   9. Accepting Warranty or Additional Liability. While redistributing<br>\n");
      out.write("      the Work or Derivative Works thereof, You may choose to offer,<br>\n");
      out.write("      and charge a fee for, acceptance of support, warranty, indemnity,<br>\n");
      out.write("      or other liability obligations and/or rights consistent with this<br>\n");
      out.write("      License. However, in accepting such obligations, You may act only<br>\n");
      out.write("      on Your own behalf and on Your sole responsibility, not on behalf<br>\n");
      out.write("      of any other Contributor, and only if You agree to indemnify,<br>\n");
      out.write("      defend, and hold each Contributor harmless for any liability<br>\n");
      out.write("      incurred by, or claims asserted against, such Contributor by reason<br>\n");
      out.write("      of your accepting any such warranty or additional liability<br>\n");
      out.write("<br>\n");
      out.write("   END OF TERMS AND CONDITIONS<br>\n");
      out.write("<br>\n");
      out.write("   APPENDIX: How to apply the Apache License to your work.<br>\n");
      out.write("<br>\n");
      out.write("      To apply the Apache License to your work, attach the following<br>\n");
      out.write("      boilerplate notice, with the fields enclosed by brackets \"[]\"<br>\n");
      out.write("      replaced with your own identifying information. (Don't include<br>\n");
      out.write("      the brackets!)  The text should be enclosed in the appropriate<br>\n");
      out.write("      comment syntax for the file format. We also recommend that a<br>\n");
      out.write("      file or class name and description of purpose be included on the<br>\n");
      out.write("      same \"printed page\" as the copyright notice for easier      same \"printed page\" as the copyright notice for easier\n");
      out.write("      identification within third-party archives.\n");
      out.write("\n");
      out.write("   Copyright [yyyy] [name of copyright owner]\n");
      out.write("\n");
      out.write("   Licensed under the Apache License, Version 2.0 (the \"License\");\n");
      out.write("   you may not use this file except in compliance with the License.\n");
      out.write("   You may obtain a copy of the License at\n");
      out.write("\n");
      out.write("       http://www.apache.org/licenses/LICENSE-2.0\n");
      out.write("\n");
      out.write("   Unless required by applicable law or agreed to in writing, software\n");
      out.write("   distributed under the License is distributed on an \"AS IS\" BASIS,\n");
      out.write("   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n");
      out.write("   See the License for the specific language governing permissions and\n");
      out.write("   limitations under the License.\n");
      out.write("Copy license text to clipboard\n");
      out.write("How to apply this license\n");
      out.write("\n");
      out.write("Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file.\n");
      out.write("\n");
      out.write("Note: The Apache Foundation recommends taking the additional step of adding a boilerplate notice to the header of each source file. You can find the notice at the very end of the license in the appendix.\n");
      out.write("\n");
      out.write("Optional: Add Apache-2.0 to your project's package description, if applicable (e.g., Node.js, Ruby, and Rust). This will ensure the license is displayed in package directories.\n");
      out.write("\n");
      out.write(" Source\n");
      out.write("Who's using this license?\n");
      out.write("\n");
      out.write("Android\n");
      out.write("Apache\n");
      out.write("Swift\n");
      out.write("About Terms of Service The content of this site is licensed under the Creative Commons Attribution 3.0 Unported License.\n");
      out.write("        </text>\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          out.clearBuffer();
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
